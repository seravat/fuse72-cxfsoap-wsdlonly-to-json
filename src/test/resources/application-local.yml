# lets listen on all ports to ensure we can be invoked from the pod IP
server:
  address: 0.0.0.0
  port: 8080
  ssl:
    keystoreFile: classpath:security/service_ks.p12
    keystoreType: pkcs12
    keystorePassword: redhat
    keyAlias: service
    clientAuth: want
    truststore: classpath:security/service_ts.p12
    truststorePassword: redhat

management:
  address: 0.0.0.0
  port: 8081
  

security:
  ignored: /**
# disable all management endpoints except health
endpoints:
  enabled: false
  health:
    enabled: true

artemis:
  url: amqps://localhost:5671?transport.trustStoreLocation=/Users/jtavares/amq-broker-7.2.3/instances/instance/etc/client_ts.p12&transport.trustStorePassword=password&transport.verifyHost=false&jms.sendTimeout=5000
  username: admin
  password: admin
  destination: jms:queue:hello
  useAnonymousProducers: false
  maxConnections: 5

cxf:
  webservice:
    name: SomeService
    serviceName: "{http://www.example.org/SimpleService/}SimpleService"
    endpointName: "{http://www.example.org/SimpleService/}SimpleServiceSOAP"
    wsdlUrl: "wsdl/simpleService.wsdl"
    namespaces:
      soap: "http://schemas.xmlsoap.org/soap/envelope/"
      sim: "http://www.example.org/SimpleService/"
    xpath: "//soap:Body/sim:NewOperation"
    simpleResponse: "resource:classpath:static/response.xml"
